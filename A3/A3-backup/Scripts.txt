% To run tests, we need to select buildscenes for each feature, for e.g. buildscene_refraction is 
% for testing refraction,and if we need to test them, we have to rename the buildscene_*feature_name* 
% to be buildscene.c and put it under the same folder as raytracer.c etc

% Added multithread
	g++ -O4 -g -fopenmp svdDynamic.c RayTracer.c utils.c -lm -o RayTracer

% Testing origin buildscene, which including area LS is being visible, use buildscene_original_1:
	g++ -O4 -g -fopenmp svdDynamic.c RayTracer.c utils.c -lm -o RayTracer 
	./Raytracer 1024 5 0 test_origin.ppm

% To run testing for "antialiasing": use same buildscene: 
	g++ -O4 -g -fopenmp svdDynamic.c RayTracer.c utils.c -lm -o RayTracer 
 	./Raytracer 1024 5 1 test_antialiasing.ppm

% Test "refraction", use buildscene_refraction, this runs about 5min with multithreading
	g++ -O4 -g -fopenmp svdDynamic.c RayTracer.c utils.c -lm -o RayTracer
	./RayTracer 1024 5 1 test_refraction.ppm

% To test ray marching, we need new util.c and util.h and use buildscene_raymarching
	g++ -O4 -g -fopenmp svdDynamic.c RayTracer_raymarching.c utils_raymarching.c -lm -o RayTracer
	./RayTracer 1024 5 1 test_raymarching.ppm